/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

//import com.sun.jdi.connect.spi.Connection;
import databaseConnection.CLogin;
import databaseConnection.ConnectionSQL;
import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.Connection;
import logic.DatabasePurchaseChecker;

/**
 *
 * @author university
 */
public class GamePage extends javax.swing.JFrame {
    private String nameGame;

    /**
     * Creates new form GamePage
     */
    
    public GamePage(String gameName) {
        initComponents();
        int userId = CLogin.userId;
        nameGame = gameName;
        
        jTextArea1.setEditable(false);
        jTextArea2.setEditable(false);
        jTextArea3.setEditable(false);
        
        getGameInfo(gameName);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        topBlackBarPanel = new javax.swing.JPanel();
        serchBox = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        logPage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setPreferredSize(new java.awt.Dimension(1920, 1080));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        topBlackBarPanel.setBackground(new java.awt.Color(0, 0, 0));
        topBlackBarPanel.setPreferredSize(new java.awt.Dimension(1920, 123));
        topBlackBarPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        serchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serchBoxActionPerformed(evt);
            }
        });
        topBlackBarPanel.add(serchBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(1460, 40, 204, 43));

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgGameStore/icon/lupa.png"))); // NOI18N
        searchButton.setPreferredSize(new java.awt.Dimension(72, 6));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        topBlackBarPanel.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1690, 40, 44, 43));

        logPage.setFont(new java.awt.Font("Liberation Sans", 1, 60)); // NOI18N
        logPage.setForeground(new java.awt.Color(255, 255, 255));
        logPage.setText("GAME ON");
        topBlackBarPanel.add(logPage, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 32, 326, 61));

        background.add(topBlackBarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, -1));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        background.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 470, 290));

        jLabel2.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 36)); // NOI18N
        jLabel2.setToolTipText("");
        background.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 220, 550, 60));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgGameStore/icon/Carrito (1).png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        background.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1530, 300, 220, 220));

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setFont(new java.awt.Font("Liberation Sans", 3, 15)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("AÃ‘ADIR AL CARRITO");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        background.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1520, 530, 250, 60));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("AnjaliOldLipi", 0, 18)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed tempor tellus nec sagittis dignissim. Nulla rhoncus pretium orci, id consequat purus feugiat et. Nunc in finibus odio. Fusce ut lectus eu ex ullamcorper feugiat vel ac enim. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed feugiat felis at tortor pellentesque, non semper mi iaculis. In interdum massa eu semper finibus. Cras at luctus nisi. Suspendisse condimentum nunc nec nunc eleifend, a volutpat lacus pulvinar. Aenean sit amet mauris in turpis mollis vehicula. Mauris vestibulum odio vel ante malesuada, sed pulvinar nunc cursus. Maecenas consectetur dolor quis ligula fringilla, ut placerat velit pulvinar. Sed vitae bibendum urna, vitae viverra arcu. Sed mattis odio quis nulla pulvinar, eu posuere enim vestibulum. Fusce auctor felis et magna bibendum pulvinar.");
        jTextArea1.setRequestFocusEnabled(false);
        jTextArea1.setSelectionColor(new java.awt.Color(51, 153, 255));
        jScrollPane1.setViewportView(jTextArea1);

        background.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 300, 880, 220));

        jLabel3.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 36)); // NOI18N
        jLabel3.setText("jLabel3");
        background.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 220, 240, 60));

        jTextArea2.setBackground(new java.awt.Color(102, 102, 102));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("AnjaliOldLipi", 3, 36)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setBorder(null);
        jTextArea2.setRequestFocusEnabled(false);
        jTextArea2.setSelectionColor(new java.awt.Color(51, 153, 255));
        jScrollPane2.setViewportView(jTextArea2);
        jTextArea2.getAccessibleContext().setAccessibleName("");

        background.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 670, 740, 300));

        jTextArea3.setBackground(new java.awt.Color(102, 102, 102));
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("AnjaliOldLipi", 3, 36)); // NOI18N
        jTextArea3.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jTextArea3.setBorder(null);
        jTextArea3.setRequestFocusEnabled(false);
        jTextArea3.setSelectionColor(new java.awt.Color(51, 153, 255));
        jTextArea3.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextArea3AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane3.setViewportView(jTextArea3);
        jTextArea3.getAccessibleContext().setAccessibleName("");

        background.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 670, 740, 300));

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 3, 24)); // NOI18N
        jLabel5.setText("Categoria");
        background.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 560, 220, 40));

        jLabel6.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 3, 48)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        background.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 530, 220, 70));

        jButton3.setBackground(new java.awt.Color(102, 102, 102));
        jButton3.setFont(new java.awt.Font("AnjaliOldLipi", 1, 18)); // NOI18N
        jButton3.setText("Volver al catalogo");
        jButton3.setBorder(null);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        background.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 230, 40));

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 3, 24)); // NOI18N
        jLabel7.setText("Desarrolladora");
        background.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 560, 400, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void serchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serchBoxActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextArea3AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextArea3AncestorAdded
        
    }//GEN-LAST:event_jTextArea3AncestorAdded

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Pagination pag = new Pagination(CLogin.userId);
        pag.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
       
        
        int IDDataUser = CLogin.userId; // ID de usuario especÃ­fico
        int IDGames = getGameInfo(nameGame); // ID del juego especÃ­fico

        ConnectionSQL connectionSQL = new ConnectionSQL();
        Connection connection = connectionSQL.getConnection();
        DatabasePurchaseChecker validator = new DatabasePurchaseChecker();

        if (connection != null) {
            validator.DatabasePurchaseChecker(connection, IDDataUser, IDGames);
        } else {
            System.out.println("Failed to establish connection.");
        }
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        CarritoCompras carrito = new CarritoCompras();
        carrito.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel4MouseClicked

    public int getGameInfo(String gameName) {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        PreparedStatement preparedStatement1 = null;
        PreparedStatement preparedStatement2 = null;
        PreparedStatement preparedStatement3 = null;
        ResultSet resultSet = null;
        ResultSet resultSet1 = null;
        ResultSet resultSet2 = null;
        ResultSet resultSet3 = null;
        int IdGame = 0;

 

        ConnectionSQL conn = new ConnectionSQL();
        String plat = null;
        jTextArea3.setAlignmentX(JTextArea.CENTER_ALIGNMENT);
        jTextArea3.setAlignmentY(JTextArea.CENTER_ALIGNMENT);
        jTextArea2.setAlignmentX(JTextArea.CENTER_ALIGNMENT);
        jTextArea2.setAlignmentY(JTextArea.CENTER_ALIGNMENT);
        try {
            // Establecer la conexiÃ³n a la base de datos
             connection = conn.getConnection();

 

 


            // Crear la consulta SQL parametrizada
            String query = "SELECT Name, Descripcion, RequisitosMin, RequisitosRec, Price, ImagePath, IDGame FROM Games WHERE Name = ?";
            String categoriaQuery = "SELECT Categories.Name " +
                "FROM Games " +
                "JOIN Categories ON Games.CategoryID = Categories.IDCategorie " +
                "WHERE Games.Name = ?";

 

 

            // Consulta para obtener el desarrollo del juego
            String desarrolloQuery = "SELECT Developments.NameDevelopment " +
                "FROM Games " +
                "JOIN Developments ON Games.DevelopmentID = Developments.IDDevelopment " +
                "WHERE Games.Name = ?";

 

 

            // Consulta para obtener la plataforma del juego
            String plataformaQuery = "SELECT Plataforms.Name " +
                "FROM Games " +
                "JOIN Plataforms ON Games.PlataformID = Plataforms.IDPlataform " +
                "WHERE Games.Name = ?";

 

            preparedStatement = connection.prepareStatement(query);
            preparedStatement1 = connection.prepareStatement(categoriaQuery);
            preparedStatement2 = connection.prepareStatement(desarrolloQuery);
            preparedStatement3 = connection.prepareStatement(plataformaQuery);
            preparedStatement.setString(1, gameName);
            preparedStatement1.setString(1, gameName);
            preparedStatement2.setString(1, gameName);
            preparedStatement3.setString(1, gameName);

 

 

            // Ejecutar la consulta
            resultSet = preparedStatement.executeQuery();
            resultSet1 = preparedStatement1.executeQuery();
            resultSet2 = preparedStatement2.executeQuery();
            resultSet3 = preparedStatement3.executeQuery();

 

 

            // Obtener los datos del juego
            if (resultSet1.next()){
                jLabel5.setText(resultSet1.getString("Categories.Name"));
            }
            if (resultSet2.next()){
                jLabel7.setText(resultSet2.getString("Developments.NameDevelopment"));
            }
            if (resultSet3.next()){
                jLabel3.setText(resultSet3.getString("Plataforms.Name"));
                plat = resultSet3.getString("Plataforms.Name");
            }
            if (resultSet.next()) {
                ImageIcon imagen = new ImageIcon(resultSet.getString("ImagePath"));
                jLabel2.setText(resultSet.getString("Name"));
                jLabel6.setText(resultSet.getString("Price"));
                jTextArea1.setText(resultSet.getString("Descripcion"));
                IdGame = resultSet.getInt("IDGame");

                if (plat.equals("PC")){
                    jTextArea3.setText(resultSet.getString("RequisitosMin"));
                    jTextArea2.setText(resultSet.getString("RequisitosRec"));

 

                }

 

                Icon icon = new ImageIcon(imagen.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_DEFAULT));
                jLabel1.setIcon(icon);
                System.out.println("Estado de carga de la imagen: " + imagen.getImageLoadStatus());

 

 

            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // Cerrar los recursos
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

 

 

        return IdGame;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GamePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GamePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GamePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GamePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
            /*public void run() {
                new GamePage().setVisible(true);
            }*/
        //});
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
            /*public void run() {
                new GamePage().setVisible(true);
            }*/
        //});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JLabel logPage;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField serchBox;
    private javax.swing.JPanel topBlackBarPanel;
    // End of variables declaration//GEN-END:variables
}
